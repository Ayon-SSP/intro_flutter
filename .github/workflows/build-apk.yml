name: Build and Release APK

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'

# Allow only one concurrent deployment
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Set permissions for GITHUB_TOKEN
permissions:
  contents: write
  actions: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: Run Tests and Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: 'gradle'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        cache: true

    - name: Verify Flutter installation
      run: |
        flutter --version
        flutter doctor -v

    - name: Install dependencies
      run: flutter pub get

    - name: Verify dependencies
      run: flutter pub deps

    - name: Run code analysis
      run: flutter analyze --fatal-infos

    - name: Check formatting
      run: dart format --set-exit-if-changed .

    - name: Run tests
      run: flutter test --coverage --reporter=expanded

    - name: Upload test results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Flutter Tests
        path: test/test_results.xml
        reporter: flutter-json
        fail-on-error: true

  build:
    name: Build APK
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: 'gradle'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build APK
      run: |
        flutter build apk \
          --release \
          --verbose \
          --build-name=${{ github.run_number }} \
          --build-number=${{ github.run_number }}

    - name: Verify APK exists
      run: |
        if [ ! -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
          echo "❌ APK file not found!"
          exit 1
        fi
        echo "✅ APK file found"
        ls -la build/app/outputs/flutter-apk/

    - name: Get APK info
      run: |
        APK_SIZE=$(stat -c%s build/app/outputs/flutter-apk/app-release.apk | numfmt --to=iec)
        echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: intro-flutter-apk-v${{ github.run_number }}
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30
        compression-level: 0

  release:
    name: Create Release
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: intro-flutter-apk-v${{ github.run_number }}
        path: ./artifacts/

    - name: Generate changelog
      id: changelog
      run: |
        if [ "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" ${{ github.event.before }}..${{ github.sha }})
        else
          CHANGELOG="- Initial release"
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          🚀 **Automated Release v${{ github.run_number }}**
          
          📱 **APK Size:** ${{ env.APK_SIZE || 'Unknown' }}
          🔗 **Commit:** ${{ github.sha }}
          👤 **Author:** ${{ github.actor }}
          📅 **Date:** ${{ github.event.head_commit.timestamp }}
          
          ## 📋 Changes in this release:
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## 📥 Download
          Download the APK file below to install on your Android device.
          
          ---
          *This release was automatically generated by GitHub Actions.*
        files: |
          ./artifacts/app-release.apk
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        make_latest: true
        generate_release_notes: false
